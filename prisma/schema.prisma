generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MenuItem {
  id        Int     @id @default(autoincrement())
  name      String
  description String @default("Brak opisu")
  price     Float
  image     String?
  category  String
}
model Table {
  id      Int      @id @default(autoincrement())
  name    String
  qrCode  String
  orders  Order[]  @relation("TableToOrder") // üîπ Dodajemy relacjƒô do zam√≥wie≈Ñ
}
model User {
  id       String  @id @default(uuid())
  email    String  @unique
  password String?  // Nullable dla u≈ºytkownik√≥w Google
  role     Role    @default(USER)
  provider String  @default("credentials") // Mo≈ºemy mieƒá "credentials" lub "google"

  @@map("users")
}

enum Role {
  ADMIN
  USER
}

model Order {
  id         String      @id @default(uuid())
  tableId    Int
  totalPrice Float
  status     Status      @default(PENDING)
  createdAt  DateTime    @default(now())

  table      Table       @relation("TableToOrder", fields: [tableId], references: [id])
  items      OrderItem[] @relation("OrderToOrderItem") 
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  name      String
  price     Float
  quantity  Int

  order     Order   @relation("OrderToOrderItem", fields: [orderId], references: [id], onDelete: Cascade)
}

enum Status {
  PENDING
  PREPARING
  READY
  COMPLETED
  CANCELLED
}
